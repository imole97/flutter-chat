// File generated by FlutterFire CLI.
// ignore_for_file: type=lint
import 'package:flutter_dotenv/flutter_dotenv.dart';
import 'package:firebase_core/firebase_core.dart' show FirebaseOptions;
import 'package:flutter/foundation.dart'
    show defaultTargetPlatform, kIsWeb, TargetPlatform;

/// Default [FirebaseOptions] for use with your Firebase apps.
///
/// Example:
/// ```dart
/// import 'firebase_options.dart';
/// // ...
/// await Firebase.initializeApp(
///   options: DefaultFirebaseOptions.currentPlatform,
/// );
/// ```

class DefaultFirebaseOptions {
  static FirebaseOptions get currentPlatform {
    if (kIsWeb) {
      throw UnsupportedError(
        'DefaultFirebaseOptions have not been configured for web - '
        'you can reconfigure this by running the FlutterFire CLI again.',
      );
    }
    switch (defaultTargetPlatform) {
      case TargetPlatform.android:
        return android;
      case TargetPlatform.iOS:
        return ios;
      case TargetPlatform.macOS:
        throw UnsupportedError(
          'DefaultFirebaseOptions have not been configured for macos - '
          'you can reconfigure this by running the FlutterFire CLI again.',
        );
      case TargetPlatform.windows:
        throw UnsupportedError(
          'DefaultFirebaseOptions have not been configured for windows - '
          'you can reconfigure this by running the FlutterFire CLI again.',
        );
      case TargetPlatform.linux:
        throw UnsupportedError(
          ' have not been configured for linux - '
          'you can reconfigure this by running the FlutterFire CLI again.',
        );
      default:
        throw UnsupportedError(
          'DefaultFirebaseOptions are not supported for this platform.',
        );
    }
  }

  static FirebaseOptions get android {
    final androidApiKey = dotenv.env['FLUTTERFIRE_ANDROID_API_KEY'];
    if (androidApiKey == null || androidApiKey.isEmpty) {
      throw StateError(
          'Environment variable FLUTTERFIRE_ANDROID_API_KEY is missing or empty.');
    }
    return FirebaseOptions(
      apiKey: 'AIzaSyCYROCIYc_0XAzEYDBbwKAcsXi3i54ABsk',
      appId: '1:417313677328:android:b2978faad4a23b2b0eea95',
      messagingSenderId: '417313677328',
      projectId: 'flutter-chat-app-cbc50',
      storageBucket: 'flutter-chat-app-cbc50.firebasestorage.app',
    );
  }
  // static const FirebaseOptions android = FirebaseOptions(
  //   apiKey: 'AIzaSyCYROCIYc_0XAzEYDBbwKAcsXi3i54ABsk',
  //   appId: '1:417313677328:android:b2978faad4a23b2b0eea95',
  //   messagingSenderId: '417313677328',
  //   projectId: 'flutter-chat-app-cbc50',
  //   storageBucket: 'flutter-chat-app-cbc50.firebasestorage.app',
  // );

  // static const FirebaseOptions ios = FirebaseOptions(
  //   apiKey: dotenv.env['FLUTTERFIRE_IOS_API_KEY'],
  //   appId: '1:417313677328:ios:bb03f190687a8bd70eea95',
  //   messagingSenderId: '417313677328',
  //   projectId: 'flutter-chat-app-cbc50',
  //   storageBucket: 'flutter-chat-app-cbc50.firebasestorage.app',
  //   iosBundleId: 'com.example.flutterChat',
  // );
  static FirebaseOptions get ios {
    final iosApiKey = dotenv.env['FLUTTERFIRE_IOS_API_KEY'];
    if (iosApiKey == null || iosApiKey.isEmpty) {
      throw StateError(
          'Environment variable FLUTTERFIRE_IOS_API_KEY is missing or empty.');
    }
    return FirebaseOptions(
      apiKey: iosApiKey,
      appId: '1:417313677328:ios:bb03f190687a8bd70eea95',
      messagingSenderId: '417313677328',
      projectId: 'flutter-chat-app-cbc50',
      storageBucket: 'flutter-chat-app-cbc50.firebasestorage.app',
      iosBundleId: 'com.example.flutterChat',
    );
  }
}
